{:paths ["src/clj" "resources"]
 :deps {org.clojure/clojure {:mvn/version "1.11.1"}

        metosin/reitit {:mvn/version "0.5.2"}

        info.sunng/ring-jetty9-adapter {:mvn/version "0.18.3"}

        integrant/integrant {:mvn/version "0.8.0"}

        environ/environ.core {:mvn/version "0.3.1"}}
 :aliases {:build {:deps {io.github.seancorfield/build-clj
                          {:git/tag "v0.9.2" :git/sha "9c9f078"
                  ;; omits deps-deploy dependency:
                           :deps/root "slim"}}
                   :ns-default build}
           :lint/clj-kondo {:replace-deps {clj-kondo/clj-kondo {:mvn/version "RELEASE"}}
                            :main-opts    ["-m" "clj-kondo.main"]}
           :dev {:ns-default user
                 :extra-paths ["dev/src"]
                 :extra-deps {integrant/repl {:mvn/version "0.3.2"}}}
           :dev/run {:main-opts ["-m" "user/dev" "resources/config.edn"]}
           :test {:extra-paths ["test/clj" "test/cljc"]
                  :extra-deps {lambdaisland/kaocha {:mvn/version "1.72.1136"}
                               lambdaisland/kaocha-cloverage {:mvn/version "1.1.89"}}
                  :main-opts ["-m" "kaocha.runner"]}

           :cljs {:extra-paths ["src/cljs"]
                  :extra-deps
                  {;; frontend deps
                   cljs-ajax/cljs-ajax                 {:mvn/version "0.8.4"}
                   org.clojure/clojurescript           {:mvn/version "1.11.60"}
                   thheller/shadow-cljs                {:mvn/version "2.19.5"}}}
           :repl {:extra-deps
                  {org.clojure/tools.namespace   {:mvn/version "1.3.0"}
                   refactor-nrepl/refactor-nrepl {:mvn/version "3.5.5"}
                   cider/cider-nrepl             {:mvn/version "0.29.0"}
                   nrepl/nrepl                   {:mvn/version "0.9.0"}
                   thheller/shadow-cljs          {:mvn/version "2.19.5"}}
                  :jvm-opts ["-Dlogback.configurationFile=logback.xml"]}

           :repl/run {:main-opts
                      ["-m" "nrepl.cmdline"
                       "--middleware"
                       "[cider.nrepl/cider-middleware refactor-nrepl.middleware/wrap-refactor]"
                       "-i"]}}}
